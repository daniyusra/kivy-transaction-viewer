#:kivy 1.0.9
WindowManager:
    mainwindow: mainwindow
    MainWindow:
        id: mainwindow

<MainWindow>:
    transactionviewer: transactionviewer
    TransactionViewerWidget:
        id: transactionviewer

<TransactionTreeNode>:
    cols: 4
    width: lbl.texture_size[0]
    height: max(lbl.texture_size[1] + dp(10), dp(24))
    text_size: lbl.width, None
    
    Label:
        text: root.transac_notes

    
    Label:
        text: root.transac_amount if root.transac_amount_int > 0 else ''
    
        
    Label:
        id: lbl
        text: root.transac_amount if root.transac_amount_int < 0 else ''

    Label:
        text: root.transac_details

<DeleteDetailsPopup>:
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Are you sure?' 
        GridLayout:
            cols: 2
            Button:
                text: 'Yes'
                on_press: root.save(), root.dismiss()
            Button:
                text: 'No'
                on_press: root.dismiss()


<CreateTransactionPopUp>:
    obj_amount: input_amount
    obj_details: input_details
    obj_date: input_date
    obj_notes: input_notes
    earnings_togglebutton: earnings_togglebutton
    spendings_togglebutton: spendings_togglebutton
    BoxLayout:
        orientation: 'vertical'
        padding: 5
        margin: 5
        GridLayout:
            cols:2
            padding: [0,15,0,15]
            Label:
                text: 'Transaction Type'

            GridLayout:
                cols: 2
                ToggleButton:
                    id: earnings_togglebutton
                    text: 'Earnings' 
                    group: 'type_transaction'
                    state: 'down'
                    on_press: root.set_transaction_type('earnings'), input_details.populate('earnings'), input_details.reset_button()
                ToggleButton:
                    id: spendings_togglebutton
                    text: 'Spending'
                    group: 'type_transaction'
                    
                    on_press: root.set_transaction_type('spendings'), input_details.populate('spendings'), input_details.reset_button()

            Label:
                text: 'amount'

            BoxLayout:
                orientation: 'horizontal'
                Label:
                    text: '+' if root.earnings_or_spendings == 'earnings' else '-' 
                    size_hint: 0.1, 1
                    
                FloatInput:
                    id: input_amount
                    size_hint: 0.9,0.7
                    pos_hint: {"top":0.85}
                    

            Label:
                text: 'date'

            DatePicker:
                id: input_date
                
            Label:
                text: 'details'
                
            BoxLayout:
                orientation: 'horizontal'
                Button:
                    text: 'Edit' 
                    size_hint: 0.3, 1
                    on_press: root.show_details_viewer_popup()
                    
                TransactionDetailsDropDownButton:
                    id: input_details
                    size_hint: 0.7,1
                              

            Label:
                text: 'notes'
            
            TextInput:
                id: input_notes
                multiline: False
                
        Button:
            size_hint:0.5, 0.15
            pos_hint: {'x': 0.25}
            id: add_transaction
            text: 'Save Transaction'
            on_press: root.save(), root.dismiss(), app.scrollable.refresh_tree()

<DetailsViewerViewclass>:
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 1)
        Rectangle:
            pos: self.pos
            size: self.size
    label1_text: 'label 1 text'
    Button:
        size_hint: 0.1, 1
        opacity: 1 if root.selected else 0 
        disabled: not root.selected
        text: 'Edit'
        on_press: root.modify_popup(root.parent, root.index, root.selected)
    Button:
        size_hint: 0.1, 1
        opacity: 1 if root.selected else 0 
        disabled: not root.selected
        text: 'Delete'
        on_press: root.delete_popup(root.parent,root.index,root.selected)
    Label:
        size_hint: 0.8, 1
        id: id_label1
        text: root.label1_text
        
<CreateDetailsPopup>:
    details_name: details_name
    earnings_togglebutton: earnings_togglebutton
    spendings_togglebutton: spendings_togglebutton

    BoxLayout:
        orientation: 'vertical'
        GridLayout:
            cols: 2
            ToggleButton:
                id: earnings_togglebutton
                text: 'Earnings' 
                group: 'type_transaction'
                state: 'down'
                on_press: root.set_earnings_or_spendings('earnings')
            ToggleButton:
                id: spendings_togglebutton
                text: 'Spending'
                group: 'type_transaction'
                on_press: root.set_earnings_or_spendings('spendings')
        GridLayout:
            cols:2
            Label:
                text: 'Details'
            TextInput:
                id: details_name
                multiline: False
        Button:
            text: 'Save'
            on_press: root.save(), root.dismiss()
                    

<DetailsViewer>:
    detailsviewerlist: detailsviewerlist
    BoxLayout:
        orientation: 'vertical'
        GridLayout:
            size_hint: 1, 0.1
            cols: 3
            ToggleButton:
                id: earnings_togglebutton
                text: 'Earnings' 
                group: 'type_transaction'
                state: 'down'
                on_press: detailsviewerlist.set_earnings_or_spendings('earnings'), detailsviewerlist.populate(), root.set_earnings_or_spendings('earnings')
            ToggleButton:
                id: spendings_togglebutton
                text: 'Spending'
                group: 'type_transaction'
                
                on_press: detailsviewerlist.set_earnings_or_spendings('spendings'), detailsviewerlist.populate(), root.set_earnings_or_spendings('spendings')
            Button:
                text: 'Add Details'
                on_press: root.show_create_details_popup()


        DetailsViewerList:
            id: detailsviewerlist
            size_hint: 1, 0.9
            viewclass: 'DetailsViewerViewclass'
            SelectableRecycleBoxLayout:
                default_size: None, dp(56)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
                multiselect: False
                touch_multiselect: False

<DeleteTransactionPopUp>:
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Are you sure?' 
        GridLayout:
            cols: 2
            Button:
                text: 'Yes'
                on_press: root.save(), root.dismiss(), app.scrollable.refresh_tree()
            Button:
                text: 'No'
                on_press: root.dismiss()

   

<TransactionViewerWidget>:
    orientation: 'vertical'
    transactiontv: transactiontv
    GridLayout:
        size_hint:1, 0.1
        cols:3
        Button:
            id: create
            text: 'create'
            on_release: root.show_create_transaction_popup()
        Button:
            id: modify
            text: 'modify'
            disabled: False if (transactiontv.node_is_selected == True)else True
            on_release: root.show_modify_transaction_popup(transactiontv.selected_node.get_id())
        Button:
            id: delete
            disabled: False if (transactiontv.node_is_selected == True)else True
            text: 'delete'
            on_release: root.show_delete_transaction_popup(transactiontv.selected_node.get_id())

    ScrollableTransactionTreeView:
        id: transactiontv
        selected_node: transactiontv.selected_node
        node_is_selected: transactiontv.node_is_selected

